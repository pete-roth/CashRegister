/// <reference types="jest" />
export declare type Class<T> = {
    new (...args: any[]): T;
};
declare type FunctionType = (...args: any[]) => any;
declare type FunctionReturnType<T> = T extends FunctionType ? ReturnType<T> : never;
declare type FunctionParametersType<T> = T extends FunctionType ? Parameters<T> : never;
declare type JestMockType<T> = jest.Mock<FunctionReturnType<T>, FunctionParametersType<T>>;
export declare type Mock<T> = T & {
    [P in keyof T as T[P] extends FunctionType ? P : never]: JestMockType<T[P]>;
};
export {};
